openapi: 3.0.3
info:
  title: AI Interview Platform API
  version: 1.0.0
  description: Netrika Gemink
paths:
  /api/analyze-video/:
    post:
      operationId: api_analyze_video_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/google/:
    post:
      operationId: api_auth_google_create
      description: Handles the callback from Google's OAuth2 flow to log in or register
        a user.
      summary: Authenticate with Google
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/camera-analysis/:
    post:
      operationId: api_camera_analysis_create
      description: |-
        Uploads a single image during an interview for real-time analysis.
            This endpoint expects a `multipart/form-data` request containing the image and the corresponding interview ID.
      summary: Upload Image for Camera Analysis
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                interview_id:
                  type: integer
              required:
              - image
              - interview_id
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CameraAnalysisSuccess'
          description: Image was successfully received and sent for analysis.
        '400':
          description: No image file was provided in the request.
        '502':
          description: 'Bad Gateway: The analysis service could not be reached or
            returned an error.'
  /api/dashboard-data/:
    get:
      operationId: api_dashboard_data_retrieve
      description: This endpoint is deprecated. Please use the `/api/user-profile/`
        and `/api/interviews/` endpoints instead.
      summary: '[DEPRECATED] Retrieve dashboard data'
      tags:
      - api
      security:
      - tokenAuth: []
      deprecated: true
      responses:
        '200':
          description: Returns a combination of user and interview data.
        '404':
          description: User profile not found.
  /api/get-available-schedules/:
    get:
      operationId: api_get_available_schedules_list
      description: Retrieves all available interview slots for a given date, including
        the remaining capacity for each slot.
      summary: Get available interview schedules for a date
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableSchedule'
          description: ''
        '400':
          description: Date field is required or has an invalid format.
        '500':
          description: An internal server error occurred.
  /api/get-average-result/:
    get:
      operationId: api_get_average_result_retrieve
      description: Calculates and returns the average `final_score` across all of
        the authenticated user's completed interviews.
      summary: Get User's Average Interview Score
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AverageScoreResponse'
          description: The request was successful. The response will either contain
            the calculated average score or a message indicating no results were found.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The user's profile could not be found.
  /api/get-result/{interview_id}:
    get:
      operationId: api_get_result_retrieve
      description: Retrieves the full results for a specific interview, including
        scores, questions, and answers.
      summary: Get Complete Interview Result
      parameters:
      - in: path
        name: interview_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullInterviewResult'
          description: The full result data for the interview.
        '404':
          description: Interview with the specified ID was not found.
        '500':
          description: An unexpected server error occurred.
  /api/get-schedules/:
    get:
      operationId: api_get_schedules_list
      description: This endpoint is deprecated. Please use `/api/get-available-schedules/`
        to get schedules for a specific date.
      summary: '[DEPRECATED] Get all schedule templates'
      tags:
      - api
      security:
      - tokenAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
  /api/interviews/:
    get:
      operationId: api_interviews_list
      description: Retrieves a list of all interviews scheduled by the authenticated
        user.
      summary: List user's interviews
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interview'
          description: ''
        '404':
          description: User profile not found.
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      description: Creates a new user account with a username, email, and password.
      summary: Register a new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationSuccess'
          description: User was created successfully.
        '400':
          description: Invalid data provided (e.g., username already exists, passwords
            don't match).
  /api/start-result/:
    post:
      operationId: api_start_result_create
      description: Triggers the final analysis process for a completed interview.
      summary: Start Final Result Analysis
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StartResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StartResultRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartResultSuccess'
          description: Result analysis process was started successfully.
        '400':
          description: Interview ID is required.
        '500':
          description: The analysis service failed to start the process.
  /api/submit-screener/:
    post:
      operationId: api_submit_screener_create
      description: Submits interview details and a CV file. This triggers a webhook
        to schedule the interview and returns booking details.
      summary: Submit screener and schedule an interview
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_id:
                  type: integer
                date:
                  type: string
                  format: date
                posisi:
                  type: string
                industri:
                  type: string
                nama_perusahaan:
                  type: string
                tingkatan:
                  type: string
                jenis_wawancara:
                  type: string
                detail_pekerjaan:
                  type: string
                tier:
                  type: string
                cv:
                  type: string
                  format: binary
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenerSuccessResponse'
          description: Interview successfully scheduled via webhook.
        '400':
          description: Invalid or missing data, or CV file is required.
        '404':
          description: User profile not found.
  /api/update-profile/:
    put:
      operationId: api_update_profile_update
      description: Updates the profile for the authenticated user. Use PATCH for partial
        updates.
      summary: Update user profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileUpdateSuccess'
          description: Profile was updated successfully.
        '400':
          description: Invalid data provided.
        '404':
          description: User profile not found.
    patch:
      operationId: api_update_profile_partial_update
      description: Updates the profile for the authenticated user. Use PATCH for partial
        updates.
      summary: Update user profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileUpdateSuccess'
          description: Profile was updated successfully.
        '400':
          description: Invalid data provided.
        '404':
          description: User profile not found.
  /api/user-profile/:
    get:
      operationId: api_user_profile_retrieve
      description: Gets the profile information for the authenticated user.
      summary: Retrieve user profile
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '404':
          description: User profile not found.
components:
  schemas:
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question_id:
          type: integer
          readOnly: true
        answer:
          type: string
          nullable: true
      required:
      - id
      - question_id
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    AvailableSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_time:
          type: string
          format: time
          nullable: true
        end_time:
          type: string
          format: time
          nullable: true
        booked_sessions:
          type: integer
          readOnly: true
        remaining_capacity:
          type: integer
          readOnly: true
      required:
      - booked_sessions
      - id
      - remaining_capacity
    AverageScoreResponse:
      type: object
      properties:
        average_score:
          type: string
          description: The calculated average score (e.g., '85.50') or '-' if no results
            exist.
        message:
          type: string
          description: An optional message, typically present when no results are
            found.
      required:
      - average_score
    CameraAnalysisSuccess:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    FullInterviewResult:
      type: object
      properties:
        interview:
          $ref: '#/components/schemas/Interview'
        result:
          allOf:
          - $ref: '#/components/schemas/Result'
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
      required:
      - answers
      - interview
      - questions
      - result
    Interview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        final_score:
          type: integer
          readOnly: true
          nullable: true
        date:
          type: string
          format: date
          nullable: true
        booking_code:
          type: string
          nullable: true
          maxLength: 20
        tier:
          $ref: '#/components/schemas/TierEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        tingkatan:
          $ref: '#/components/schemas/TingkatanEnum'
        jenis_wawancara:
          $ref: '#/components/schemas/JenisWawancaraEnum'
        posisi:
          type: string
          nullable: true
          maxLength: 100
        industri:
          type: string
          nullable: true
          maxLength: 100
        nama_perusahaan:
          type: string
          nullable: true
          maxLength: 100
        detail_pekerjaan:
          type: string
          nullable: true
        skor_keseluruhan:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        summary:
          type: string
          nullable: true
        domisili_saat_ini:
          type: string
          nullable: true
          maxLength: 100
        kekuatan:
          type: string
          nullable: true
        kelemahan:
          type: string
          nullable: true
        tools:
          type: string
          nullable: true
        pendidikan:
          type: string
          nullable: true
        pengalaman_relevan:
          type: string
          nullable: true
        portofolio:
          type: string
          nullable: true
        sertifikasi:
          type: string
          nullable: true
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        user_profile:
          type: integer
          nullable: true
        schedule:
          type: integer
          nullable: true
      required:
      - final_score
      - id
      - user
    JenisWawancaraEnum:
      enum:
      - Technical
      - HR
      - Design
      - Management
      - Other
      type: string
      description: |-
        * `Technical` - Technical
        * `HR` - HR
        * `Design` - Design
        * `Management` - Management
        * `Other` - Other
    PatchedUserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          nullable: true
          maxLength: 100
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          type: string
          nullable: true
          maxLength: 10
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
    ProfileUpdateSuccess:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/UserProfile'
      required:
      - data
      - message
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        n8n_id:
          type: string
          nullable: true
          maxLength: 10
        question:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        interview:
          type: integer
      required:
      - created_at
      - id
      - interview
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - email
      - password
      - username
    Result:
      type: object
      properties:
        interview:
          type: integer
        final_score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        final_summary:
          type: string
          nullable: true
        recommendation:
          type: string
          nullable: true
        strengths:
          type: string
          nullable: true
        gaps:
          type: string
          nullable: true
        communication_skills:
          type: string
          nullable: true
        cognitive_insights:
          type: string
          nullable: true
        multiple_faces:
          type: string
          nullable: true
          maxLength: 15
        eye_contact:
          type: string
          nullable: true
          maxLength: 15
        face_visibility:
          type: string
          nullable: true
          maxLength: 15
        general_expression:
          type: string
          nullable: true
          maxLength: 15
        camera_quality:
          type: string
          nullable: true
          maxLength: 15
        camera_perspective:
          type: string
          nullable: true
          maxLength: 15
        generated_at:
          type: string
          format: date-time
      required:
      - generated_at
      - interview
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_time:
          type: string
          format: time
          nullable: true
        end_time:
          type: string
          format: time
          nullable: true
      required:
      - id
    ScreenerSuccessResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        posisi:
          type: string
        jenis_wawancara:
          type: string
        booking_code:
          type: string
      required:
      - booking_code
      - date
      - end_time
      - jenis_wawancara
      - message
      - posisi
      - start_time
      - status
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    StartResultRequest:
      type: object
      properties:
        interview_id:
          type: integer
      required:
      - interview_id
    StartResultSuccess:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    StatusEnum:
      enum:
      - Pending
      - Scheduled
      - Completed
      - Cancelled
      type: string
      description: |-
        * `Pending` - Pending
        * `Scheduled` - Scheduled
        * `Completed` - Completed
        * `Cancelled` - Cancelled
    TierEnum:
      enum:
      - Free
      - Basic
      - Premium
      type: string
      description: |-
        * `Free` - Free
        * `Basic` - Basic
        * `Premium` - Premium
    TingkatanEnum:
      enum:
      - Entry
      - Mid
      - Senior
      - Lead
      - Manager
      type: string
      description: |-
        * `Entry` - Entry
        * `Mid` - Mid
        * `Senior` - Senior
        * `Lead` - Lead
        * `Manager` - Manager
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - username
    UserCreationSuccess:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: '#/components/schemas/UserDetail'
      required:
      - message
      - user
    UserDetail:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
      required:
      - email
      - username
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          nullable: true
          maxLength: 100
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        date_of_birth:
          type: string
          format: date
          nullable: true
        sex:
          type: string
          nullable: true
          maxLength: 10
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - created_at
      - email
      - id
      - user
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
